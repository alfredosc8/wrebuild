##Force all domain requests, mysite.com, to go to www.mysite.com
[% IF sitename.match('^www\.')  %]
server {
    server_name [% domain %];
    rewrite ^ $scheme://[% sitename %]$request_uri redirect;
}
[% END %]

server {
    server_name  [% sitename %];

    listen   [% config.get('nginx/port') %]; ## listen for ipv4

    access_log /var/log/nginx/[% sitename %].log combined;
    root       [% config.getDomainRoot %]/[% sitename %]/public;
    client_max_body_size 20M;

    # proxy webgui to apache/modperl listening on 127.0.0.1
    location / {
        error_page 404 @app;
        try_files /tmp/x @app;
    }

    location @app {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_pass   http://127.0.0.1:[% config.get('apache/port') %];
    }

    location /extras/ {
        add_header Cache-Control public;
        expires 24h;
        root   /data/WebGUI/www/;
        add_header Access-Control-Allow-Origin *;
    }

    location /uploads/ {
        error_page 459 = @app;
        set $dir $uri;
        if ( $uri ~ ^(.*/) ) {
            set $dir $1;
        }
        if ( -f $document_root/$dir/.wgaccess ) { 
            return 459;
        }
    }

    location /uploads/filepump { expires max; }
    location = /default.ida    { access_log off; deny all; }
    location /_vti_bin         { access_log off; deny all; }
    location /_mem_bin         { access_log off; deny all; }
    location ~ /\.(ht|wg)      { access_log off; deny all; }
    location = /alive          { access_log off; }
}

#server {
#    listen   443 ssl;
#    server_name  [% sitename %] [%domain %];
#
#    ssl  on;
#    ssl_certificate     [% config.getDomainRoot %]/[% sitename %]/certs/server.crt;
#    ssl_certificate_key [% config.getDomainRoot %]/[% sitename %]/certs/server.key;
#
#    access_log /var/log/nginx/[% sitename %].log combined;
#    root       [% config.getDomainRoot %]/www.example.com/public;
#
#    # proxy webgui to apache/modperl listening on 127.0.0.1
#    location / {
#        # proxy_cache static;
#        # proxy_cache_valid 200 1s;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $remote_addr;
#        proxy_set_header Host $host;
#        proxy_pass   http://127.0.0.1:[% config.get('apache/port') %];
#    }
#
#    location /extras/ {
#        add_header Cache-Control public;
#        expires 24h;
#        root   /data/WebGUI/www/;
#        add_header Access-Control-Allow-Origin *;
#    }
#
#    location /uploads/filepump { expires max; }
#    location = /default.ida    { access_log off; deny all; }
#    location /_vti_bin     { access_log off; deny all; }
#    location /_mem_bin     { access_log off; deny all; }
#    location ~ /\.(ht|wg)      { access_log off; deny all; }
#    location = /alive      { access_log off; }
#}


